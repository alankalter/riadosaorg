@{
	ViewBag.Title = "Weatherchime";
}

@section Styles {
	<link href="@Url.Content("~/Content/Pages/Weatherchime.css")" rel="stylesheet" type="text/css" />
}

<div class="container col-md-12">
	<div class="location">
		<div class="">
			<h2>Weatherchime</h2>

		</div>
		<div class="locationbox">
				<div class="">
					<div>
						<label for="tags">Location</label>
					</div>
					<input id="tags">
				</div>

			<div><input type="radio" name="version" value="one" checked> v1.1<br></div>
			<div><input type="radio" name="version" value="zero"> v1.0<br></div>
		</div>
	</div>
	<div class="aboutTab">
		<h3>What is this? </h3>

		<div>
			Upon choosing a location, current weather conditions from <a href="http://www.wunderground.com/" target="_blank">wunderground.com</a> are
			scaled and used as initial values of synthesizer modules in <a href="http://flockingjs.org/" target="_blank">flocking.js</a>, a web audio library.
		</div>
		<div>
			For the visual, a recent satellite weather image of the area is processed repeatedly using an implementation of Elementary Cellular Automata.
			A rule, (from the subset found <a href="http://mathworld.wolfram.com/ElementaryCellularAutomaton.html">here</a>), and other settings
			are initialized using the current weather conditions.
		</div>
		<div><a href="http://www.github.com/alankalter/weatherchime" target="_blank">Code</a>.</div>
	</div>

</div>



@Styles.Render("~/Content/themes/base/css")

@section scripts {

	<script>
		$(document).ready(function () {



			$('#tags').autocomplete({
				source: function (request, response) {
					var autocompleteUrl = '/api/WeatherChime/AutoComp' + '?searchText=' + request.term;
					$.ajax({
						url: autocompleteUrl,
						type: 'Post',
						cache: false,
						dataType: 'json',
						success: function (json) {
							var resObj = JSON.parse(json);
							//console.log(resObj.RESULTS);
							response($.map(resObj.RESULTS, function (data, id) {
								if (data.type === "city")
									return {
										label: data.name,
										value: data.zmw
									};
							}));
						},
						error: function (xmlHttpRequest, textStatus, errorThrown) {
							console.log('some error occured', textStatus, errorThrown);
						}
					});
				},
				minLength: 1,
				select: function (event, ui) {

					event.preventDefault();
					$("#tags").val(ui.item.label);
					//PK.render(ui.item.value);
					var version = $('input[name=version]:checked').val();
					if (version=== "one"){
						window.location = '/WeatherChime/Performancev1point1?request=' + ui.item.value;
					}
					else{
						window.location = '/WeatherChime/Performancev1point0?request=' + ui.item.value;
				}
				},
				focus: function (event, ui) {
					$("#tags").val(ui.item.label);
					return false;
				},
				open: function (result) {
					if (navigator.userAgent.match(/(iPod|iPhone|iPad)/)) {
						$('.ui-autocomplete').off('menufocus hover mouseover');

					}
				}
			});


		});
	</script>
	@Scripts.Render("~/bundles/jquery-ui")


}
